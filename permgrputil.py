"""
Permutation group utilities.
"""

from basicpermutationgroup import *


def order(generators):
    """
    Calculates the order of the permutation group generated by generators.
    :param generators: should be a Python list of permutations (from permv2.py),
            which represent a generating set of a permutation group H.
    :return: the order of the group
    """

    el = FindNonTrivialOrbit(generators)

    if el is None:
        return 1

    el_orbit = Orbit(generators, el)
    el_stabilizer = Stabilizer(generators, el)

    return len(el_orbit) * order(el_stabilizer)


def is_member(permutation, generators):
    """
    Checks if the given permutation is a member of the set generated by generators.
    :param permutation: the permutation (from permv2.py) to check if it is a member
    :param generators: should be a Python list of permutations (from permv2.py),
            which represent a generating set of a permutation group H.
    :return: <True> iff permutation is a member of the set generated by generators
    """
    return False